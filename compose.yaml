services:
  js:
    build:
      context: ./docker/js
      args:
        - UID=1000
        - GID=1000
    # user: ${HOST_UID}:${HOST_GID}
    environment:
      TZ: 'Asia/Tokyo'
      # volumes:
      # - ./front:/home/node/front
    tty: true
    ports:
      - ${BIND_IP:-127.0.0.1}:5173:5173

  web:
    build:
      context: ./docker/web/nginx
      args:
        - UID=${WEB_USER_UID}
        - GID=${WEB_USER_GID}
    tty: true
    # user: ${WEB_USER_UID}:${WEB_USER_GID}
    # volumes:
    # TODO /静的環境/フロントのビルドパス
    # - ./static/webroot:/var/www/html
    environment:
      TZ: 'Asia/Tokyo'
      # NGINX_HOST: foobar.com
      NGINX_PORT: 80
    ports:
      - ${BIND_IP:-127.0.0.1}:${HTTP_PORT}:80
      - ${BIND_IP:-127.0.0.1}:${HTTPS_PORT}:443
      # volumes:
      # conf
      # - ./docker/web/nginx.conf:/etc/nginx/nginx.conf
      # - ./docker/web/conf.d:/etc/nginx/conf.d
      # - ./docker/web/parts:/etc/nginx/parts
      # # front root
      # - ./front-admin/webroot:/usr/share/nginx/webroot
      # # log
      # - ./logs/web:/tmp/web
      # cap_drop:
      #   - ALL
      # cap_add:
      #   - NET_BIND_SERVICE

  pgsql:
    restart: always
    build:
      context: ./docker/db/pgsql
      args:
        - UID=1000
        - GID=1000
    volumes:
      - ./docker/db/pgsql/initdb:/docker-entrypoint-initdb.d
      # - ./data:/var/lib/pgsql/data
    environment:
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "pass"
    ports:
      - 5432:5432
    healthcheck:
      test: [ 'CMD', 'pg_isready' ]
      interval: 5s
      timeout: 2s
      retries: 20
      # env_file:
      #   - .env-dev

      #  maria:
      #   healthcheck:
      #     test: ['CMD', '/usr/local/bin/healthcheck.sh', '--connect']
      #     interval: 5s
      #     timeout: 2s
      #     retries: 20


      # TODO envでバージョン変えるとかしたいよんね
